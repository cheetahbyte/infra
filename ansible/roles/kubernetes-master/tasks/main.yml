---
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: cluster_initialized

- name: Initialize Kubernetes cluster
  command: >
    kubeadm init
    --pod-network-cidr={{ pod_network_cidr }}
    --service-cidr={{ service_cidr }}
    --apiserver-advertise-address={{ private_ip }}
    --apiserver-cert-extra-sans={{ ansible_host }},{{ private_ip }}
    --node-name={{ inventory_hostname }}
  register: kubeadm_init
  when: not cluster_initialized.stat.exists

- name: Create .kube directory for root
  file:
    path: /root/.kube
    state: directory
    mode: '0755'

- name: Copy admin.conf to .kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0644'

- name: Get join command
  command: kubeadm token create --print-join-command
  register: join_command
  changed_when: false

- name: Store join command
  set_fact:
    join_command: "{{ join_command.stdout }}"

- name: Save join command to file
  copy:
    content: "{{ join_command }}"
    dest: /tmp/join_command.sh
    mode: '0755'

- name: Download Calico manifest
  get_url:
    url: https://raw.githubusercontent.com/projectcalico/calico/v3.26.1/manifests/calico.yaml
    dest: /tmp/calico.yaml

- name: Modify Calico for IPv6 support
  replace:
    path: /tmp/calico.yaml
    regexp: '# - name: CALICO_IPV4POOL_CIDR\n            #   value: "192.168.0.0/16"'
    replace: |
      - name: CALICO_IPV4POOL_CIDR
                value: "{{ pod_network_cidr }}"
              - name: CALICO_IPV6POOL_CIDR
                value: "fd20::/64"
              - name: IP6
                value: "autodetect"
              - name: FELIX_IPV6SUPPORT
                value: "true"

- name: Apply Calico network plugin
  k8s:
    state: present
    src: /tmp/calico.yaml
    kubeconfig: /root/.kube/config
  environment:
    KUBECONFIG: /root/.kube/config

- name: Wait for Calico pods to be ready
  k8s_info:
    api_version: v1
    kind: Pod
    namespace: kube-system
    label_selectors:
      - k8s-app=calico-node
    kubeconfig: /root/.kube/config
  register: calico_pods
  until: calico_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == (calico_pods.resources | length)
  retries: 30
  delay: 10

- name: Create cluster-admin user for kubectl access
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user
        namespace: kube-system
    kubeconfig: /root/.kube/config

- name: Create cluster role binding for admin user
  k8s:
    state: present
    definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kube-system
    kubeconfig: /root/.kube/config